%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 16 113 596 679
%%Creator: ImageMagick
%%Title: ex3-49.eps
%%EndComments
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/compression 1 string def
/gray_packet 1 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters: 
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters: 
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters: 
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters: 
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters: 
  %   colors: number of colors in the colormap.
  %   colormap: red, green, blue color packets.
  %
  currentfile buffer readline pop
  token pop /colors exch def pop
  /colors colors 3 mul def
  /colormap colors string def
  currentfile colormap readhexstring pop pop
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { PseudoClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayPseudoClassPacket } image
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters: 
  %   x & y translation.
  %   x & y scale.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def

DisplayImage
16 113
580 566
41 40
1
0
7
989898
ffffff
606060
f0f0f0
c0c0c0
d8d8d8
3333ff
002901260200000001000324000002000000010003240000020000000100031404070307
000002000000010003140400010703060000020000000100031404000103030104000100
030600000200000001000314040001020300010003000400010004040301000002000000
010003140400010103000100030104000105030100000200000001000314040001000300
010003010500040001030400010003010000020000000100031404000100030105020400
010205000400010003010000020000000100031404000100040501010300050004000100
030100000200000001000315010703000100050004000100030100000200000001000317
040001030300010003000500040001000301000002000000010003170400010203000100
030105000400010003010000020000000100031704000101050504000100030100000200
000001000317040001000407010003010000020000000100031704000109030100000200
000001000324000002000000010003240000020000000100032400000200000001000324
000002000000010003000021010003000000020000000100030000210100030000000200
000001000300000106010103060301030603010306030103060000000100030000000200
000001000300000106000103060301030603010306030103060100000100030000000200
000001000300000101030603010306030103060301030602000001000300000002000000
010003000001010206030103060301030603010306030000010003000000020000000100
030000010101060301030603010306030103060301000000010003000000020000000100
030000010100060301030603010306030103060301010000010003000000020000000100
030000010603010306030103060301030603010200000100030000000200000001000300
000106020103060301030603010306030103000001000300000002000000010003000001
060101030603010306030103060301030600000001000300000002000000010003000001
060001030603010306030103060301030601000001000300000002000000010003000001
010306030103060301030603010306020000010003000000020000000100030000210100
0300000002000000010003000000010d0000011203000000020000000100030f00000313
0000020000270229

%%Trailer
